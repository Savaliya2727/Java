/* 1. Write a Java program to demonstrate Default Constructor. 

2. Write a Java program to demonstrate Parameterized Constructor. 

3. Write a Java program to demonstrate Single Inheritance. 

4. Write a Java program to demonstrate Multilevel Inheritance. 

5. Write a Java program to demonstrate multilevel inheritance. Create a Number class with an 
integer variable x. Derive a Square class from Number to calculate and print the square of x. 
Further, derive a Cube class from Square to calculate and print the cube of x. 

6. The employee list for a company contains employee code, name, designation and basic pay. 
The employee is given a house rent allowance (HRA) of 10% of the basic pay. medical 
allowance (MA) Rs 200 and dearness allowance (DA) of 50% of the basic pay. The deduction 
for provident fund (PF) is 10% of the basic pay and professional tax (PT) is Rs250. The total 
pay of the employee is calculated as Basic Pay + HRA + DA + MA â€“ PF - PT. Write a class to 
define the details of the employee. Write a constructor to assign the required initial values. 
Add a method to calculate HRA, DA, PF and total pay and print them out. Create objects for 
three different employees and calculate their total pay. 

7. Write a program to demonstrate "final" keyword for variable, method and class. 

8. Write a program to demonstrate "abstract" keyword for function and class. 

9. Write a program to demonstrate concept of interface and "implements" keyword in Java. 

10. Write a Java program that calculates annual house tax based on property type(owner
occupied or rented).  
a. If the house is under owner's occupation, the tax is 0.5% of the total property value. 
b. If the house is rented, the tax is 10% of the annual rent. 

11. Create a Java program that calculates the annual house tax using inheritance. Define a base 
class House with a totalValue attribute and a method to calculate tax as 0.5% of the total 
property value. Then, create a derived class RentedHouse that extends House and includes 
an additional attribute for annualRent. Override the tax calculation method in RentedHouse 
to compute tax as 10% of the annual rent instead. Implement a main method to 
demonstrate tax calculations for both owner-occupied and rented properties, displaying the 
results accordingly. 

12. Create a Java program that demonstrates the concept of packages by organizing classes into 
separate packages and using them in a main program. Define a package pkg that contains a 
class MyClass with a method to display a welcome message. Additionally, create another 
package Calculate that includes two classes, Sum and Sub, which contain methods to 
perform addition and subtraction of two integers, respectively. In the main program, import 
these classes, create their objects, and use them to perform addition and subtraction 
operations. Finally, display the results to verify the functionality of the program. 

13. Write a Java program to create a class called Vehicle with a method called drive(). Create a 
subclass called Car that overrides the drive() method to print "Repairing a car". 

14. Write a Java program to create a class called Employee with methods called work() and 
getSalary(). Create a subclass called HRManager that overrides the work() method and adds 
a new method called addEmployee(). 

15. Write a Java program to create a class known as "BankAccount" with methods called 
deposit() and withdraw(). Create a subclass called SavingsAccount that overrides the 
withdraw() method to prevent withdrawals if the account balance falls below one hundred. 

16. Write a Java program that creates a class hierarchy for employees of a company. The base 
class should be Employee, with subclasses Manager, Developer, and Programmer. Each 
subclass should have properties such as name, address, salary, and job title. Implement 
methods for calculating bonuses, generating performance reports, and managing projects. 

17. Create a class Dog that implements the Animal interface and overrides the bark() method of 
animal interface to print "Dog is barking". 

18. Design an interface Account with methods for deposit, withdraw, calculate interest, and view 
balances. Implement this interface in two classes: SavingsAccount and CurrentAccount. 

19. Define an interface Drawable with a method draw(). Implement this interface in classes like 
Circle, Rectangle, and Triangle, each providing its own drawing logic. 

20. Define an interface Playable with a method play(). Implement this interface in classes such as 
Football, Volleyball, and Basketball. 

21. Implement a package called patterns that contains classes for printing different patterns 
(e.g., stars, numbers): 

22. Develop a package named studentmanagement that includes classes for managing student 
details (e.g., adding students, displaying information). 

23. Create a package named mathoperations with classes for basic arithmetic operations 
(addition, subtraction, multiplication, division).*/